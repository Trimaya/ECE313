% Function to parse data
function data = parseData(filename)
    fileID = fopen(filename, 'r');
    data = [];
    while ~feof(fileID)
        line = fgetl(fileID);
        if startsWith(line, 'd ')
            numericData = sscanf(line(3:end), '%f');
            data = [data; numericData(6) numericData(8)]; % Assuming Gate Int. Voltage and Drain Current positions
        end
    end
    fclose(fileID);
end

% Parse the files
dataPGM = parseData('test1spgm.log');
dataERS = parseData('test100msERS.log');

% Separate data into variables
gateVoltagePGM = dataPGM(:, 1);
drainCurrentPGM = dataPGM(:, 2);
gateVoltageERS = dataERS(:, 1);
drainCurrentERS = dataERS(:, 2);

% Plot the data
figure;
semilogy(gateVoltagePGM, abs(drainCurrentPGM), 'b-', 'DisplayName', 'Programming (1 s)');
hold on;
semilogy(gateVoltageERS, abs(drainCurrentERS), 'r-', 'DisplayName', 'Erasing (100 ms)');
xlabel('Gate Interpolation Voltage (V)');
ylabel('Drain Current (A, log scale)');
title('Memory Window Plot');
legend('show');
grid on;
%%%%%%%
function ECE313_MemoryWindow_Parse
    % Function to parse data
    function data = parseData(filename)
        fileID = fopen(filename, 'r');
        data = [];
        while ~feof(fileID)
            line = fgetl(fileID);
            if startsWith(line, 'd ')
                numericData = sscanf(line(3:end), '%f');
                % Assuming the 6th entry is gate voltage and the 8th entry is drain current
                data = [data; numericData(6) numericData(8)];
            end
        end
        fclose(fileID);
    end

    % Define the full paths to the log files
    pathPGM = '/Users/alvaraac/Desktop/Spring 2024/ECE 313 - Memory Device Technology and Application/Final Project - ECE313/Data logs - varying BO, TL, TO for PGM ERS/Tests/test1spgm.log';
    pathERS = '/Users/alvaraac/Desktop/Spring 2024/ECE 313 - Memory Device Technology and Application/Final Project - ECE313/Data logs - varying BO, TL, TO for PGM ERS/Tests/test100msERS.log';

    % Parse the files
    dataPGM = parseData(pathPGM);
    dataERS = parseData(pathERS);

    % Print some of the data to the Command Window for verification
    disp('Sample data from PGM:');
    disp(dataPGM(1:5, :)); % Display first 5 entries from PGM
    disp('Sample data from ERS:');
    disp(dataERS(1:5, :)); % Display first 5 entries from ERS

    % Separate data into variables
    gateVoltagePGM = dataPGM(:, 1);
    drainCurrentPGM = dataPGM(:, 2);
    gateVoltageERS = dataERS(:, 1);
    drainCurrentERS = dataERS(:, 2);

    % Plot the data
    figure;
    semilogy(gateVoltagePGM, abs(drainCurrentPGM), 'b-', 'DisplayName', 'Programming (1 s)');
    hold on;
    semilogy(gateVoltageERS, abs(drainCurrentERS), 'r-', 'DisplayName', 'Erasing (100 ms)');
    xlabel('Gate Interpolation Voltage (V)');
    ylabel('Drain Current (A, log scale)');
    title('Memory Window Plot');
    legend('show');
    grid on;
end
%%%%%%%
